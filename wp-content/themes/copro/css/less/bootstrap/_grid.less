//
// Grid system
// --------------------------------------------------

// Set the container width, and override it for fixed navbars in media queries
.container {
  .container-fixed();

  @media (min-width: @screen-sm) {
    width: @container-sm;
  }
  @media (min-width: @screen-md) {
    width: @container-md;
  }
  @media (min-width: @screen-lg-min) {
    width: @container-lg;
  }
}

// Expanded Container
.expanded .container {
	@media (min-width: @screen-md) {
	  width: auto;
	  padding-left: 2.5%;
	  padding-right: 2.5%;
	}
	@media (min-width: @screen-lg-min) {
	  width: auto;
	  padding-left: 2.5%;
	  padding-right: 2.5%;
	}
}

// Compact Container
.compact .container {
	@media (min-width: @screen-md) {
	  width: @container-sm;
	}
	@media (min-width: @screen-lg-min) {
	  width: @container-md;
	}
}

// Aside Compact Container
.aside-compact {
	margin-right: auto;
 	margin-left: auto;
	position: relative;

	@media (min-width: @screen-md) {
	  width: @container-md;
	}
	@media (min-width: @screen-lg-min) {
	  width: @container-lg;
	}
}

// Dynamic Area Z-Fix
.dynamic-area .ivan-bg-video {
	z-index: 10;
}

.dynamic-area .ivan-custom-wrapper .vc_row {
	position: relative;
	z-index: 100;
}

// mobile first defaults
.row {
  .make-row();
}

// Common styles for small and large grid columns
.make-grid-columns();

// Small trick to inner cols
.col-wrapper {
	position: relative;
	display: block;
}


// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

.make-grid-columns-float(xs);
.make-grid(@grid-columns, xs, width);
.make-grid(@grid-columns, xs, pull);
.make-grid(@grid-columns, xs, push);
.make-grid(@grid-columns, xs, offset);


// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: @screen-sm-min) {
  .make-grid-columns-float(sm);
  .make-grid(@grid-columns, sm, width);
  .make-grid(@grid-columns, sm, pull);
  .make-grid(@grid-columns, sm, push);
  .make-grid(@grid-columns, sm, offset);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: @screen-md-min) {
  .make-grid-columns-float(md);
  .make-grid(@grid-columns, md, width);
  .make-grid(@grid-columns, md, pull);
  .make-grid(@grid-columns, md, push);
  .make-grid(@grid-columns, md, offset);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: @screen-lg-min) {
  .make-grid-columns-float(lg);
  .make-grid(@grid-columns, lg, width);
  .make-grid(@grid-columns, lg, pull);
  .make-grid(@grid-columns, lg, push);
  .make-grid(@grid-columns, lg, offset);
}

